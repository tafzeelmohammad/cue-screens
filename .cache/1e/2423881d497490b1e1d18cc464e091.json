{"id":"node_modules/lodash/_unicodeToArray.js","dependencies":[{"name":"F:\\cue-screens\\package.json","includedInParent":true,"mtime":1644311015407},{"name":"F:\\cue-screens\\.babelrc","includedInParent":true,"mtime":1644310991266},{"name":"F:\\cue-screens\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1644311008925}],"generated":{"js":"/** Used to compose unicode character classes. */\r\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\r\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\r\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsAstral = '[' + rsAstralRange + ']',\r\n    rsCombo = '[' + rsComboRange + ']',\r\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\r\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\r\n    rsNonAstral = '[^' + rsAstralRange + ']',\r\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\r\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\r\n    rsZWJ = '\\\\u200d';\r\n\r\n/** Used to compose unicode regexes. */\r\nvar reOptMod = rsModifier + '?',\r\n    rsOptVar = '[' + rsVarRange + ']?',\r\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\r\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\r\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\r\n\r\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\r\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\r\n\r\n/**\r\n * Converts a Unicode `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction unicodeToArray(string) {\r\n  return string.match(reUnicode) || [];\r\n}\r\n\r\nmodule.exports = unicodeToArray;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/_unicodeToArray.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/lodash/_unicodeToArray.js":"/** Used to compose unicode character classes. */\r\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\r\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\r\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\r\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\r\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\r\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\r\n\r\n/** Used to compose unicode capture groups. */\r\nvar rsAstral = '[' + rsAstralRange + ']',\r\n    rsCombo = '[' + rsComboRange + ']',\r\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\r\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\r\n    rsNonAstral = '[^' + rsAstralRange + ']',\r\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\r\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\r\n    rsZWJ = '\\\\u200d';\r\n\r\n/** Used to compose unicode regexes. */\r\nvar reOptMod = rsModifier + '?',\r\n    rsOptVar = '[' + rsVarRange + ']?',\r\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\r\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\r\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\r\n\r\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\r\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\r\n\r\n/**\r\n * Converts a Unicode `string` to an array.\r\n *\r\n * @private\r\n * @param {string} string The string to convert.\r\n * @returns {Array} Returns the converted array.\r\n */\r\nfunction unicodeToArray(string) {\r\n  return string.match(reUnicode) || [];\r\n}\r\n\r\nmodule.exports = unicodeToArray;\r\n"},"lineCount":41}},"error":null,"hash":"cce9bc669c5db74ba9fd9ba9eedfd9fc","cacheData":{"env":{}}}