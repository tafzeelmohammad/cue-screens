{"id":"node_modules/property-expr/index.js","dependencies":[{"name":"F:\\cue-screens\\package.json","includedInParent":true,"mtime":1644311015407},{"name":"F:\\cue-screens\\.babelrc","includedInParent":true,"mtime":1644310991266},{"name":"F:\\cue-screens\\node_modules\\property-expr\\package.json","includedInParent":true,"mtime":1644311010688}],"generated":{"js":"/**\r\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\r\n */\r\n'use strict'\r\n\r\nfunction Cache(maxSize) {\r\n  this._maxSize = maxSize\r\n  this.clear()\r\n}\r\nCache.prototype.clear = function () {\r\n  this._size = 0\r\n  this._values = Object.create(null)\r\n}\r\nCache.prototype.get = function (key) {\r\n  return this._values[key]\r\n}\r\nCache.prototype.set = function (key, value) {\r\n  this._size >= this._maxSize && this.clear()\r\n  if (!(key in this._values)) this._size++\r\n\r\n  return (this._values[key] = value)\r\n}\r\n\r\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\r\n  DIGIT_REGEX = /^\\d+$/,\r\n  LEAD_DIGIT_REGEX = /^\\d/,\r\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\r\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\r\n  MAX_CACHE_SIZE = 512\r\n\r\nvar pathCache = new Cache(MAX_CACHE_SIZE),\r\n  setCache = new Cache(MAX_CACHE_SIZE),\r\n  getCache = new Cache(MAX_CACHE_SIZE)\r\n\r\nvar config\r\n\r\nmodule.exports = {\r\n  Cache: Cache,\r\n\r\n  split: split,\r\n\r\n  normalizePath: normalizePath,\r\n\r\n  setter: function (path) {\r\n    var parts = normalizePath(path)\r\n\r\n    return (\r\n      setCache.get(path) ||\r\n      setCache.set(path, function setter(obj, value) {\r\n        var index = 0\r\n        var len = parts.length\r\n        var data = obj\r\n\r\n        while (index < len - 1) {\r\n          var part = parts[index]\r\n          if (\r\n            part === '__proto__' ||\r\n            part === 'constructor' ||\r\n            part === 'prototype'\r\n          ) {\r\n            return obj\r\n          }\r\n\r\n          data = data[parts[index++]]\r\n        }\r\n        data[parts[index]] = value\r\n      })\r\n    )\r\n  },\r\n\r\n  getter: function (path, safe) {\r\n    var parts = normalizePath(path)\r\n    return (\r\n      getCache.get(path) ||\r\n      getCache.set(path, function getter(data) {\r\n        var index = 0,\r\n          len = parts.length\r\n        while (index < len) {\r\n          if (data != null || !safe) data = data[parts[index++]]\r\n          else return\r\n        }\r\n        return data\r\n      })\r\n    )\r\n  },\r\n\r\n  join: function (segments) {\r\n    return segments.reduce(function (path, part) {\r\n      return (\r\n        path +\r\n        (isQuoted(part) || DIGIT_REGEX.test(part)\r\n          ? '[' + part + ']'\r\n          : (path ? '.' : '') + part)\r\n      )\r\n    }, '')\r\n  },\r\n\r\n  forEach: function (path, cb, thisArg) {\r\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\r\n  },\r\n}\r\n\r\nfunction normalizePath(path) {\r\n  return (\r\n    pathCache.get(path) ||\r\n    pathCache.set(\r\n      path,\r\n      split(path).map(function (part) {\r\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\nfunction split(path) {\r\n  return path.match(SPLIT_REGEX) || ['']\r\n}\r\n\r\nfunction forEach(parts, iter, thisArg) {\r\n  var len = parts.length,\r\n    part,\r\n    idx,\r\n    isArray,\r\n    isBracket\r\n\r\n  for (idx = 0; idx < len; idx++) {\r\n    part = parts[idx]\r\n\r\n    if (part) {\r\n      if (shouldBeQuoted(part)) {\r\n        part = '\"' + part + '\"'\r\n      }\r\n\r\n      isBracket = isQuoted(part)\r\n      isArray = !isBracket && /^\\d+$/.test(part)\r\n\r\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuoted(str) {\r\n  return (\r\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\r\n  )\r\n}\r\n\r\nfunction hasLeadingNumber(part) {\r\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\r\n}\r\n\r\nfunction hasSpecialChars(part) {\r\n  return SPEC_CHAR_REGEX.test(part)\r\n}\r\n\r\nfunction shouldBeQuoted(part) {\r\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\r\n}\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/property-expr/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/property-expr/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}}],"sources":{"node_modules/property-expr/index.js":"/**\r\n * Based on Kendo UI Core expression code <https://github.com/telerik/kendo-ui-core#license-information>\r\n */\r\n'use strict'\r\n\r\nfunction Cache(maxSize) {\r\n  this._maxSize = maxSize\r\n  this.clear()\r\n}\r\nCache.prototype.clear = function () {\r\n  this._size = 0\r\n  this._values = Object.create(null)\r\n}\r\nCache.prototype.get = function (key) {\r\n  return this._values[key]\r\n}\r\nCache.prototype.set = function (key, value) {\r\n  this._size >= this._maxSize && this.clear()\r\n  if (!(key in this._values)) this._size++\r\n\r\n  return (this._values[key] = value)\r\n}\r\n\r\nvar SPLIT_REGEX = /[^.^\\]^[]+|(?=\\[\\]|\\.\\.)/g,\r\n  DIGIT_REGEX = /^\\d+$/,\r\n  LEAD_DIGIT_REGEX = /^\\d/,\r\n  SPEC_CHAR_REGEX = /[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g,\r\n  CLEAN_QUOTES_REGEX = /^\\s*(['\"]?)(.*?)(\\1)\\s*$/,\r\n  MAX_CACHE_SIZE = 512\r\n\r\nvar pathCache = new Cache(MAX_CACHE_SIZE),\r\n  setCache = new Cache(MAX_CACHE_SIZE),\r\n  getCache = new Cache(MAX_CACHE_SIZE)\r\n\r\nvar config\r\n\r\nmodule.exports = {\r\n  Cache: Cache,\r\n\r\n  split: split,\r\n\r\n  normalizePath: normalizePath,\r\n\r\n  setter: function (path) {\r\n    var parts = normalizePath(path)\r\n\r\n    return (\r\n      setCache.get(path) ||\r\n      setCache.set(path, function setter(obj, value) {\r\n        var index = 0\r\n        var len = parts.length\r\n        var data = obj\r\n\r\n        while (index < len - 1) {\r\n          var part = parts[index]\r\n          if (\r\n            part === '__proto__' ||\r\n            part === 'constructor' ||\r\n            part === 'prototype'\r\n          ) {\r\n            return obj\r\n          }\r\n\r\n          data = data[parts[index++]]\r\n        }\r\n        data[parts[index]] = value\r\n      })\r\n    )\r\n  },\r\n\r\n  getter: function (path, safe) {\r\n    var parts = normalizePath(path)\r\n    return (\r\n      getCache.get(path) ||\r\n      getCache.set(path, function getter(data) {\r\n        var index = 0,\r\n          len = parts.length\r\n        while (index < len) {\r\n          if (data != null || !safe) data = data[parts[index++]]\r\n          else return\r\n        }\r\n        return data\r\n      })\r\n    )\r\n  },\r\n\r\n  join: function (segments) {\r\n    return segments.reduce(function (path, part) {\r\n      return (\r\n        path +\r\n        (isQuoted(part) || DIGIT_REGEX.test(part)\r\n          ? '[' + part + ']'\r\n          : (path ? '.' : '') + part)\r\n      )\r\n    }, '')\r\n  },\r\n\r\n  forEach: function (path, cb, thisArg) {\r\n    forEach(Array.isArray(path) ? path : split(path), cb, thisArg)\r\n  },\r\n}\r\n\r\nfunction normalizePath(path) {\r\n  return (\r\n    pathCache.get(path) ||\r\n    pathCache.set(\r\n      path,\r\n      split(path).map(function (part) {\r\n        return part.replace(CLEAN_QUOTES_REGEX, '$2')\r\n      })\r\n    )\r\n  )\r\n}\r\n\r\nfunction split(path) {\r\n  return path.match(SPLIT_REGEX) || ['']\r\n}\r\n\r\nfunction forEach(parts, iter, thisArg) {\r\n  var len = parts.length,\r\n    part,\r\n    idx,\r\n    isArray,\r\n    isBracket\r\n\r\n  for (idx = 0; idx < len; idx++) {\r\n    part = parts[idx]\r\n\r\n    if (part) {\r\n      if (shouldBeQuoted(part)) {\r\n        part = '\"' + part + '\"'\r\n      }\r\n\r\n      isBracket = isQuoted(part)\r\n      isArray = !isBracket && /^\\d+$/.test(part)\r\n\r\n      iter.call(thisArg, part, isBracket, isArray, idx, parts)\r\n    }\r\n  }\r\n}\r\n\r\nfunction isQuoted(str) {\r\n  return (\r\n    typeof str === 'string' && str && [\"'\", '\"'].indexOf(str.charAt(0)) !== -1\r\n  )\r\n}\r\n\r\nfunction hasLeadingNumber(part) {\r\n  return part.match(LEAD_DIGIT_REGEX) && !part.match(DIGIT_REGEX)\r\n}\r\n\r\nfunction hasSpecialChars(part) {\r\n  return SPEC_CHAR_REGEX.test(part)\r\n}\r\n\r\nfunction shouldBeQuoted(part) {\r\n  return !isQuoted(part) && (hasLeadingNumber(part) || hasSpecialChars(part))\r\n}\r\n"},"lineCount":159}},"error":null,"hash":"cb75fcbbb8e413eb846d3d6b85652b61","cacheData":{"env":{}}}