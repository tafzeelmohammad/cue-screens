{"id":"node_modules/lodash/_memoizeCapped.js","dependencies":[{"name":"F:\\cue-screens\\package.json","includedInParent":true,"mtime":1644311015407},{"name":"F:\\cue-screens\\.babelrc","includedInParent":true,"mtime":1644310991266},{"name":"F:\\cue-screens\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1644311008925},{"name":"./memoize","loc":{"line":1,"column":22},"parent":"F:\\cue-screens\\node_modules\\lodash\\_memoizeCapped.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\memoize.js"}],"generated":{"js":"var memoize = require('./memoize');\r\n\r\n/** Used as the maximum memoize cache size. */\r\nvar MAX_MEMOIZE_SIZE = 500;\r\n\r\n/**\r\n * A specialized version of `_.memoize` which clears the memoized function's\r\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\r\n *\r\n * @private\r\n * @param {Function} func The function to have its output memoized.\r\n * @returns {Function} Returns the new memoized function.\r\n */\r\nfunction memoizeCapped(func) {\r\n  var result = memoize(func, function(key) {\r\n    if (cache.size === MAX_MEMOIZE_SIZE) {\r\n      cache.clear();\r\n    }\r\n    return key;\r\n  });\r\n\r\n  var cache = result.cache;\r\n  return result;\r\n}\r\n\r\nmodule.exports = memoizeCapped;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_memoizeCapped.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}}],"sources":{"node_modules/lodash/_memoizeCapped.js":"var memoize = require('./memoize');\r\n\r\n/** Used as the maximum memoize cache size. */\r\nvar MAX_MEMOIZE_SIZE = 500;\r\n\r\n/**\r\n * A specialized version of `_.memoize` which clears the memoized function's\r\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\r\n *\r\n * @private\r\n * @param {Function} func The function to have its output memoized.\r\n * @returns {Function} Returns the new memoized function.\r\n */\r\nfunction memoizeCapped(func) {\r\n  var result = memoize(func, function(key) {\r\n    if (cache.size === MAX_MEMOIZE_SIZE) {\r\n      cache.clear();\r\n    }\r\n    return key;\r\n  });\r\n\r\n  var cache = result.cache;\r\n  return result;\r\n}\r\n\r\nmodule.exports = memoizeCapped;\r\n"},"lineCount":27}},"error":null,"hash":"bcf4ee175f0fcac5d181f3377a553f7b","cacheData":{"env":{}}}