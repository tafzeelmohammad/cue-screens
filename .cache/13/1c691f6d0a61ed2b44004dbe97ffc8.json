{"id":"node_modules/lodash/_baseMatchesProperty.js","dependencies":[{"name":"F:\\cue-screens\\package.json","includedInParent":true,"mtime":1644311015407},{"name":"F:\\cue-screens\\.babelrc","includedInParent":true,"mtime":1644310991266},{"name":"F:\\cue-screens\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1644311008925},{"name":"./_baseIsEqual","loc":{"line":1,"column":26},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_baseIsEqual.js"},{"name":"./get","loc":{"line":2,"column":18},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\get.js"},{"name":"./hasIn","loc":{"line":3,"column":20},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\hasIn.js"},{"name":"./_isKey","loc":{"line":4,"column":20},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_isKey.js"},{"name":"./_isStrictComparable","loc":{"line":5,"column":33},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_isStrictComparable.js"},{"name":"./_matchesStrictComparable","loc":{"line":6,"column":38},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_matchesStrictComparable.js"},{"name":"./_toKey","loc":{"line":7,"column":20},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseMatchesProperty.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_toKey.js"}],"generated":{"js":"var baseIsEqual = require('./_baseIsEqual'),\r\n    get = require('./get'),\r\n    hasIn = require('./hasIn'),\r\n    isKey = require('./_isKey'),\r\n    isStrictComparable = require('./_isStrictComparable'),\r\n    matchesStrictComparable = require('./_matchesStrictComparable'),\r\n    toKey = require('./_toKey');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatchesProperty(path, srcValue) {\r\n  if (isKey(path) && isStrictComparable(srcValue)) {\r\n    return matchesStrictComparable(toKey(path), srcValue);\r\n  }\r\n  return function(object) {\r\n    var objValue = get(object, path);\r\n    return (objValue === undefined && objValue === srcValue)\r\n      ? hasIn(object, path)\r\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\r\n  };\r\n}\r\n\r\nmodule.exports = baseMatchesProperty;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_baseMatchesProperty.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}}],"sources":{"node_modules/lodash/_baseMatchesProperty.js":"var baseIsEqual = require('./_baseIsEqual'),\r\n    get = require('./get'),\r\n    hasIn = require('./hasIn'),\r\n    isKey = require('./_isKey'),\r\n    isStrictComparable = require('./_isStrictComparable'),\r\n    matchesStrictComparable = require('./_matchesStrictComparable'),\r\n    toKey = require('./_toKey');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\r\n *\r\n * @private\r\n * @param {string} path The path of the property to get.\r\n * @param {*} srcValue The value to match.\r\n * @returns {Function} Returns the new spec function.\r\n */\r\nfunction baseMatchesProperty(path, srcValue) {\r\n  if (isKey(path) && isStrictComparable(srcValue)) {\r\n    return matchesStrictComparable(toKey(path), srcValue);\r\n  }\r\n  return function(object) {\r\n    var objValue = get(object, path);\r\n    return (objValue === undefined && objValue === srcValue)\r\n      ? hasIn(object, path)\r\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\r\n  };\r\n}\r\n\r\nmodule.exports = baseMatchesProperty;\r\n"},"lineCount":34}},"error":null,"hash":"60f21d930bc5980033bd74221541c94f","cacheData":{"env":{}}}