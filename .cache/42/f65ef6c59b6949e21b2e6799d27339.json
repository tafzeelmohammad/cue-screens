{"id":"node_modules/lodash/_baseIsMatch.js","dependencies":[{"name":"F:\\cue-screens\\package.json","includedInParent":true,"mtime":1644311015407},{"name":"F:\\cue-screens\\.babelrc","includedInParent":true,"mtime":1644310991266},{"name":"F:\\cue-screens\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1644311008925},{"name":"./_Stack","loc":{"line":1,"column":20},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseIsMatch.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_Stack.js"},{"name":"./_baseIsEqual","loc":{"line":2,"column":26},"parent":"F:\\cue-screens\\node_modules\\lodash\\_baseIsMatch.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_baseIsEqual.js"}],"generated":{"js":"var Stack = require('./_Stack'),\r\n    baseIsEqual = require('./_baseIsEqual');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Array} matchData The property names, values, and compare flags to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n */\r\nfunction baseIsMatch(object, source, matchData, customizer) {\r\n  var index = matchData.length,\r\n      length = index,\r\n      noCustomizer = !customizer;\r\n\r\n  if (object == null) {\r\n    return !length;\r\n  }\r\n  object = Object(object);\r\n  while (index--) {\r\n    var data = matchData[index];\r\n    if ((noCustomizer && data[2])\r\n          ? data[1] !== object[data[0]]\r\n          : !(data[0] in object)\r\n        ) {\r\n      return false;\r\n    }\r\n  }\r\n  while (++index < length) {\r\n    data = matchData[index];\r\n    var key = data[0],\r\n        objValue = object[key],\r\n        srcValue = data[1];\r\n\r\n    if (noCustomizer && data[2]) {\r\n      if (objValue === undefined && !(key in object)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      var stack = new Stack;\r\n      if (customizer) {\r\n        var result = customizer(objValue, srcValue, key, object, source, stack);\r\n      }\r\n      if (!(result === undefined\r\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\r\n            : result\r\n          )) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nmodule.exports = baseIsMatch;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/lodash/_baseIsMatch.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}}],"sources":{"node_modules/lodash/_baseIsMatch.js":"var Stack = require('./_Stack'),\r\n    baseIsEqual = require('./_baseIsEqual');\r\n\r\n/** Used to compose bitmasks for value comparisons. */\r\nvar COMPARE_PARTIAL_FLAG = 1,\r\n    COMPARE_UNORDERED_FLAG = 2;\r\n\r\n/**\r\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\r\n *\r\n * @private\r\n * @param {Object} object The object to inspect.\r\n * @param {Object} source The object of property values to match.\r\n * @param {Array} matchData The property names, values, and compare flags to match.\r\n * @param {Function} [customizer] The function to customize comparisons.\r\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\r\n */\r\nfunction baseIsMatch(object, source, matchData, customizer) {\r\n  var index = matchData.length,\r\n      length = index,\r\n      noCustomizer = !customizer;\r\n\r\n  if (object == null) {\r\n    return !length;\r\n  }\r\n  object = Object(object);\r\n  while (index--) {\r\n    var data = matchData[index];\r\n    if ((noCustomizer && data[2])\r\n          ? data[1] !== object[data[0]]\r\n          : !(data[0] in object)\r\n        ) {\r\n      return false;\r\n    }\r\n  }\r\n  while (++index < length) {\r\n    data = matchData[index];\r\n    var key = data[0],\r\n        objValue = object[key],\r\n        srcValue = data[1];\r\n\r\n    if (noCustomizer && data[2]) {\r\n      if (objValue === undefined && !(key in object)) {\r\n        return false;\r\n      }\r\n    } else {\r\n      var stack = new Stack;\r\n      if (customizer) {\r\n        var result = customizer(objValue, srcValue, key, object, source, stack);\r\n      }\r\n      if (!(result === undefined\r\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\r\n            : result\r\n          )) {\r\n        return false;\r\n      }\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nmodule.exports = baseIsMatch;\r\n"},"lineCount":63}},"error":null,"hash":"f6d3d866ad9d710650ff7730aed4610e","cacheData":{"env":{}}}