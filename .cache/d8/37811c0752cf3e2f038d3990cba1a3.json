{"id":"node_modules/lodash/words.js","dependencies":[{"name":"F:\\cue-screens\\package.json","includedInParent":true,"mtime":1644311015407},{"name":"F:\\cue-screens\\.babelrc","includedInParent":true,"mtime":1644310991266},{"name":"F:\\cue-screens\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1644311008925},{"name":"./_asciiWords","loc":{"line":1,"column":25},"parent":"F:\\cue-screens\\node_modules\\lodash\\words.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_asciiWords.js"},{"name":"./_hasUnicodeWord","loc":{"line":2,"column":29},"parent":"F:\\cue-screens\\node_modules\\lodash\\words.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_hasUnicodeWord.js"},{"name":"./toString","loc":{"line":3,"column":23},"parent":"F:\\cue-screens\\node_modules\\lodash\\words.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\toString.js"},{"name":"./_unicodeWords","loc":{"line":4,"column":27},"parent":"F:\\cue-screens\\node_modules\\lodash\\words.js","resolved":"F:\\cue-screens\\node_modules\\lodash\\_unicodeWords.js"}],"generated":{"js":"var asciiWords = require('./_asciiWords'),\r\n    hasUnicodeWord = require('./_hasUnicodeWord'),\r\n    toString = require('./toString'),\r\n    unicodeWords = require('./_unicodeWords');\r\n\r\n/**\r\n * Splits `string` into an array of its words.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to inspect.\r\n * @param {RegExp|string} [pattern] The pattern to match words.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the words of `string`.\r\n * @example\r\n *\r\n * _.words('fred, barney, & pebbles');\r\n * // => ['fred', 'barney', 'pebbles']\r\n *\r\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\r\n * // => ['fred', 'barney', '&', 'pebbles']\r\n */\r\nfunction words(string, pattern, guard) {\r\n  string = toString(string);\r\n  pattern = guard ? undefined : pattern;\r\n\r\n  if (pattern === undefined) {\r\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\r\n  }\r\n  return string.match(pattern) || [];\r\n}\r\n\r\nmodule.exports = words;\r\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/lodash/words.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/lodash/words.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/lodash/words.js":"var asciiWords = require('./_asciiWords'),\r\n    hasUnicodeWord = require('./_hasUnicodeWord'),\r\n    toString = require('./toString'),\r\n    unicodeWords = require('./_unicodeWords');\r\n\r\n/**\r\n * Splits `string` into an array of its words.\r\n *\r\n * @static\r\n * @memberOf _\r\n * @since 3.0.0\r\n * @category String\r\n * @param {string} [string=''] The string to inspect.\r\n * @param {RegExp|string} [pattern] The pattern to match words.\r\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\r\n * @returns {Array} Returns the words of `string`.\r\n * @example\r\n *\r\n * _.words('fred, barney, & pebbles');\r\n * // => ['fred', 'barney', 'pebbles']\r\n *\r\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\r\n * // => ['fred', 'barney', '&', 'pebbles']\r\n */\r\nfunction words(string, pattern, guard) {\r\n  string = toString(string);\r\n  pattern = guard ? undefined : pattern;\r\n\r\n  if (pattern === undefined) {\r\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\r\n  }\r\n  return string.match(pattern) || [];\r\n}\r\n\r\nmodule.exports = words;\r\n"},"lineCount":36}},"error":null,"hash":"f1eee07d4921dd55d725611d66dee8fe","cacheData":{"env":{}}}